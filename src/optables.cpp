#include "optables.hpp"

using namespace std;
using otr = unordered_map< addr_mode_id, uint8_t >;

static unordered_map< string, size_t > mnemonic_map(
  { { "ora", 0 },  { "and", 1 },  { "eor", 2 },  { "adc", 3 },  { "sbc", 4 },
    { "cmp", 5 },  { "cpx", 6 },  { "cpy", 7 },  { "dec", 8 },  { "dex", 9 },
    { "dey", 10 }, { "inc", 11 }, { "inx", 12 }, { "iny", 13 }, { "asl", 14 },
    { "rol", 15 }, { "lsr", 16 }, { "ror", 17 }, { "lda", 18 }, { "sta", 19 },
    { "ldx", 20 }, { "stx", 21 }, { "ldy", 22 }, { "sty", 23 }, { "tax", 24 },
    { "txa", 25 }, { "tay", 26 }, { "tya", 27 }, { "tsx", 28 }, { "txs", 29 },
    { "pla", 30 }, { "pha", 31 }, { "plp", 32 }, { "php", 33 }, { "bpl", 34 },
    { "bmi", 35 }, { "bvc", 36 }, { "bvs", 37 }, { "bcc", 38 }, { "bcs", 39 },
    { "bne", 40 }, { "beq", 41 }, { "brk", 42 }, { "rti", 43 }, { "jsr", 44 },
    { "rts", 45 }, { "jmp", 46 }, { "bit", 47 }, { "clc", 48 }, { "sec", 49 },
    { "cld", 50 }, { "sed", 51 }, { "cli", 52 }, { "sei", 53 }, { "clv", 54 },
    { "nop", 55 } } );

static uint8_t op6502[ 56 ][ 12 ] = {
  // imp   imm   zpg   zpx   zpy   izx   izy   abs   abx   aby   ind   rel
  { 0x00, 0x09, 0x05, 0x15, 0x00, 0x01, 0x11, 0x0D, 0x1D, 0x19, 0x00, 0x00 },  // ora
  { 0x00, 0x29, 0x25, 0x35, 0x00, 0x21, 0x31, 0x2D, 0x3D, 0x39, 0x00, 0x00 },  // and
  { 0x00, 0x49, 0x45, 0x55, 0x00, 0x41, 0x51, 0x4D, 0x5D, 0x59, 0x00, 0x00 },  // eor
  { 0x00, 0x69, 0x65, 0x75, 0x00, 0x61, 0x71, 0x6D, 0x7D, 0x79, 0x00, 0x00 },  // adc
  { 0x00, 0xE9, 0xE5, 0xF5, 0x00, 0xE1, 0xF1, 0xED, 0xFD, 0xF9, 0x00, 0x00 },  // sbc
  { 0x00, 0xC9, 0xC5, 0xD5, 0x00, 0xC1, 0xD1, 0xCD, 0xDD, 0xD9, 0x00, 0x00 },  // cmp
  { 0x00, 0xE0, 0xE4, 0x00, 0x00, 0x00, 0x00, 0xEC, 0x00, 0x00, 0x00, 0x00 },  // cpx
  { 0x00, 0xC0, 0xC4, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0x00 },  // cpy
  { 0x00, 0x00, 0xC6, 0xD6, 0x00, 0x00, 0x00, 0xCE, 0xDE, 0x00, 0x00, 0x00 },  // dec
  { 0xCA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // dex
  { 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // dey
  { 0x00, 0x00, 0xE6, 0xF6, 0x00, 0x00, 0x00, 0xEE, 0xFE, 0x00, 0x00, 0x00 },  // inc
  { 0xE8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // inx
  { 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // iny
  { 0x0A, 0x00, 0x06, 0x16, 0x00, 0x00, 0x00, 0x0E, 0x1E, 0x00, 0x00, 0x00 },  // asl
  { 0x2A, 0x00, 0x26, 0x36, 0x00, 0x00, 0x00, 0x2E, 0x3E, 0x00, 0x00, 0x00 },  // rol
  { 0x4A, 0x00, 0x46, 0x56, 0x00, 0x00, 0x00, 0x4E, 0x5E, 0x00, 0x00, 0x00 },  // lsr
  { 0x6A, 0x00, 0x66, 0x76, 0x00, 0x00, 0x00, 0x6E, 0x7E, 0x00, 0x00, 0x00 },  // ror
  { 0x00, 0xA9, 0xA5, 0xB5, 0x00, 0xA1, 0xB1, 0xAD, 0xBD, 0xB9, 0x00, 0x00 },  // lda
  { 0x00, 0x00, 0x85, 0x95, 0x00, 0x81, 0x91, 0x8D, 0x9D, 0x99, 0x00, 0x00 },  // sta
  { 0x00, 0xA2, 0xA6, 0x00, 0xB6, 0x00, 0x00, 0xAE, 0x00, 0xBE, 0x00, 0x00 },  // ldx
  { 0x00, 0x00, 0x86, 0x00, 0x96, 0x00, 0x00, 0x8E, 0x00, 0x00, 0x00, 0x00 },  // stx
  { 0x00, 0xA0, 0xA4, 0xB4, 0x00, 0x00, 0x00, 0xAC, 0xBC, 0x00, 0x00, 0x00 },  // ldy
  { 0x00, 0x00, 0x84, 0x94, 0x00, 0x00, 0x00, 0x8C, 0x00, 0x00, 0x00, 0x00 },  // sty
  { 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // tax
  { 0x8A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // txa
  { 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // tay
  { 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // tya
  { 0xBA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // tsx
  { 0x9A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // txs
  { 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // pla
  { 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // pha
  { 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // plp
  { 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // php
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10 },  // bpl
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30 },  // bmi
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50 },  // bvc
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70 },  // bvs
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90 },  // bcc
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0 },  // bcs
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD0 },  // bne
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0 },  // beq
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // brk
  { 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // rti
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00 },  // jsr
  { 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // rts
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x6C, 0x00 },  // jmp
  { 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00 },  // bit
  { 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // clc
  { 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // sec
  { 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // cld
  { 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // sed
  { 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // cli
  { 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // sei
  { 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // clv
  { 0xEA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },  // nop
};